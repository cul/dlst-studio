name: CI + Deployment

on:
  push:
    branches: [ 'github-actions-deployment' ] # TODO: Change later

jobs:
  ci:
    runs-on: ubuntu-latest
    env:
      NOKOGIRI_USE_SYSTEM_LIBRARIES: true
    steps:
      - uses: actions/checkout@v2
      - name: Install libxslt for nokogiri gem (required for version < 1.11)
        run: sudo apt-get install -y libxml2-dev libxslt-dev
      - name: Add --no-document option to .gemrc file to speed up bundle install
        run: "echo 'gem: --no-document' > ~/.gemrc"
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.7.5
          bundler-cache: true # runs 'bundle install' and caches installed gems automatically
      - name: Build jekyll site
        run: bundle exec jekyll build
      - name: Run tests
        run: bundle exec rake test
      # This step will only run for certain branches:
      - name: Optionally zip up the built site (if deploying)
        if: contains(fromJson('["refs/heads/github-actions-deployment", "refs/heads/deploy-staging", "refs/heads/deploy-prod"]'), github.ref)
        run: zip -q -r ./_site.zip ./_site
      # This step will only run for certain branches:
      # Note: The upload-artifact step is slow for lots of files, but fast for a single zip file.
      - name: Optionally store site build for subsequent deployment step (if deploying)
        if: contains(fromJson('["refs/heads/github-actions-deployment", "refs/heads/deploy-staging", "refs/heads/deploy-prod"]'), github.ref)
        uses: actions/upload-artifact@v3
        with:
          name: built-site
          path: _site.zip

  deploy:
    # This job will only run on certain branches
    if: contains(fromJson('["refs/heads/github-actions-deployment", "refs/heads/deploy-staging", "refs/heads/deploy-prod"]'), github.ref)
    needs: ci
    runs-on: ubuntu-latest
    steps:
      - name: Download built-site artifact from previous CI job
        uses: actions/download-artifact@v3
        with:
          name: built-site
      - name: Unzip the downloaded artifact
        run: unzip -q ./_site.zip
      - name: ls the unzipped artifact
        run: ls -la ./_site
      - name: If github-actions-deployment branch, deploy to staging
        if: github.ref == 'refs/heads/github-actions-deployment'
        # GitHub Actions includes the AWS CLI by default, so we can just use it directly
        run: >
          aws s3 sync
          ./_site
          s3://cul-s3-dlst-travis-studio-staging/
          --acl public-read --follow-symlinks --delete
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: 'us-west-2'
      - name: If deploy-staging branch, deploy to staging
        if: github.ref == 'refs/heads/deploy-staging'
        run: echo 'placeholder - deploy to staging'
      - name: If deploy-prod branch, deploy to prod
        if: github.ref == 'refs/heads/deploy-prod'
        run: echo 'placeholder - deploy to prod'

  # deploy-to-s3:
    # if: github.ref == 'refs/heads/master' # this job should only run on the master branch
    # needs: ci # This job should only run after the ci job completes successfully
  #   runs-on: ubuntu-latest
  #   env:
  #     NOKOGIRI_USE_SYSTEM_LIBRARIES: true
  #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Install libxslt for nokogiri gem (required for version < 1.11)
  #       run: sudo apt-get install -y libxml2-dev libxslt-dev
  #     - name: Add --no-document option to .gemrc file to speed up bundle install
  #       run: "echo 'gem: --no-document' > ~/.gemrc"
  #     - name: Set up Ruby
  #       uses: ruby/setup-ruby@v1
  #       with:
  #         # We build and deploy with a specific version of ruby
  #         ruby-version: ${{ env.RUBY_VERSION_FOR_DEPLOYMENT }}
  #         bundler-cache: true # runs 'bundle install' and caches installed gems automatically
  #     - name: Build jekyll site
  #       run: bundle exec jekyll build
  #     - name: Deployment
  #       uses: reggionick/s3-deploy@v3
  #       with:
  #           folder: _site
  #           bucket: cul-s3-dlst-travis-studio-staging
  #           bucket-region: us-west-2
